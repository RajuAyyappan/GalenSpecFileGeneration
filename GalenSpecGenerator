package com.ibs.library.galen.components;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.StringTokenizer;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.galenframework.config.GalenConfig;
import com.galenframework.config.GalenProperty;
import com.galenframework.testng.GalenTestNgTestBase;
import com.ibs.library.galen.models.SpecConfig;

/**
 * Created by Raju Ayyappan on 02 Dec 2019
 */
public class GalenSpecGenerator extends GalenTestNgTestBase {



    private final static Logger LOGGER = LoggerFactory.getLogger(GalenTestConfig.class);
    /*
     Let these constants be here itself.
    */
    public static final String FIREFOX = "firefox";
    public static final String CHROME = "chrome";
    public static final String INTERNET_EXPLORER = "internetExplorer";

    /*
    TODO : The wrong thing @ dump with dir name of devices (when row comes in excel file with same device multiple times, dump will override) - Need to think.
    */


    static StringTokenizer st1;
    static String msg;
    private HashMap<String,String> userConfig;

    public HashMap<String,String> getUserConfig() {
        return userConfig;
    }

    public void setUserConfig(HashMap<String,String> userConfig) {
        this.userConfig = userConfig;
    }


    public void setDefaultConfig() {
        GalenConfig.getConfig().setProperty(GalenProperty.GALEN_RANGE_APPROXIMATION,"100");
        GalenConfig.getConfig().setProperty(GalenProperty.GALEN_LOG_LEVEL,"5"); //TODO : Need to confirm this value
        
    }

   
  
	/**
	 * 
	 * @param resourcePath
	 * @return
	 */
    private File getResourceFile(String resourcePath) {
        try {
            InputStream in = ClassLoader.getSystemClassLoader().getResourceAsStream(resourcePath);
            if (in == null) {
                return null;
            }

            File tempFile = File.createTempFile(String.valueOf(in.hashCode()), ".tmp");
            LOGGER.info("Temp file : " + tempFile.getCanonicalPath());
            tempFile.deleteOnExit();

            try (FileOutputStream out = new FileOutputStream(tempFile)) {
                //copy stream
                byte[] buffer = new byte[1024];
                int bytesRead;
                while ((bytesRead = in.read(buffer)) != -1) {
                    out.write(buffer, 0, bytesRead);
                }
            }
            return tempFile;
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }



    @Override
    public WebDriver createDriver(Object[] args) {
        WebDriver driver = getDriver(CHROME);
        if (args.length > 0) {
            if (args[0] != null && args[0] instanceof TestDevice) {
                TestDevice device = (TestDevice)args[0];
                if (device.getScreenSize() != null) {
                    driver.manage().window().setSize(device.getScreenSize());
                }
            }
        }
        LOGGER.info("\n\n+++++++++++++++ - Instance Divider - +++++++++++++++++++\n");
        LOGGER.info("Browser Driver : " + driver);
        return driver;
    }


    public WebDriver getDriver(String browser) {
        WebDriver driver = null;
/*        try {
            driver = getDriver();
        } catch (RuntimeException e) {
            LOGGER.info(e + " , Hence instantiating new " + browser + " instance.");
        }*/


        if(driver == null){
            if(browser.equals(FIREFOX)) {
                System.setProperty("webdriver.firefox.bin", getUserConfig().get("firefox")); //version=38.0.5
                driver = new FirefoxDriver();
                driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);

            }else if (browser.equals(CHROME)) {
                System.setProperty("webdriver.chrome.driver", getUserConfig().get("chrome"));
                driver = new ChromeDriver();
                driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
            }else if (browser.equals(INTERNET_EXPLORER)){
                System.setProperty("webdriver.ie.driver", getUserConfig().get("internetExplorer"));
                driver = new InternetExplorerDriver();
                driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
            }
        }
        return driver;
    }
  

    /**
     * 
     * @param specConfig
     * @throws IOException
     */
    public void generateOutputspec(SpecConfig specConfig) throws IOException {
    	//initialize the driver
    	getDriver(CHROME);
        String deviceName = specConfig.getDevice().getName();
        //TODO : Device name should not be hard-coded like mobile/tab/desktop.. it should get from PageConfig.
        ArrayList<String> formElements = new ArrayList<String>();
        List<String> startContent=new ArrayList<String>();
        
        String parentDiv = "div1";//parent div id.        
        startContent.add("@objects");                            
        getDriver().get(specConfig.getUrl());
        
        List<WebElement> elementsList =  getDriver().findElements(By.xpath("//div[@id='"+parentDiv+"']//*"));//generate spec file foe a div.
        String text=null;
        String delim1 = "\n";
        //Print all the which are sibling of the the element named as 'SELENIUM' in 'Popular course'
        for (WebElement webElement : elementsList) {
        	text=webElement.getAttribute("id").toString();
             // these are my delimiters
             st1= new StringTokenizer(text,delim1);
             while (st1.hasMoreElements())
             {
                 msg = (String) st1.nextElement();
                 String str  = "\t"+msg+"   id   "+msg;
                 startContent.add("\t" + msg + "   id   " + msg);
                 System.out.println(str);
                 formElements.add(msg);
                 
             }
        } 
        

        File specFile_temp=null;
        File specFile=null;

        String specFileLocation = getUserConfig().get("specFileLocation");//location of specfile
        String specFileStr = specFileLocation + File.separator + specConfig.getSpecFileName();//spec file name
        specFile_temp = new File(specFileStr);
        specFile = new File(specFile_temp.getCanonicalPath());

        File parentDir = specFile.getParentFile();

        checkAndcreateDir(parentDir);

        if (!specFile.exists())
        {
            specFile.createNewFile();
        }
        LOGGER.info("Spec file : " + specFile.getCanonicalPath() + "\n");

        startContent.add("");
        startContent.add("= Content =");
        startContent.add("\t@on " + deviceName);              
        Iterator<String> itr = formElements.iterator();
        
        while(itr.hasNext()) {             	
        	try {
        		String id = itr.next();
        		WebElement web = getDriver().findElement(By.xpath(".//*[@id='"+id+"']"))   ;
        		Dimension rectangle = web.getSize();         		
        		if(rectangle.getHeight()>0 && rectangle.getHeight()>0) {
        			startContent.add("\t"+id+":");
        			startContent.add("\t\t height "+rectangle.getHeight()+" px");
        			startContent.add("\t\t width "+rectangle.getWidth()+" px");
        			startContent.add("\t\t css font-size is \""+web.getCssValue("font-size")+"\"");
        			startContent.add("\t\t css font-weight is \""+web.getCssValue("font-weight")+"\"");
        			startContent.add("\t\t css color is \""+web.getCssValue("color")+"\"");   
        			
        			//TODO customize more attributes.
        		}else {
        			startContent.remove(id);
        		}
        	}catch(Exception ee) {
        		ee.printStackTrace();
        	}        	
        }
        
        FileUtils.writeLines(specFile_temp, startContent);
    }

    private void checkAndcreateDir(File parentDir) throws IOException {
        //TODO : Do something for this error !! ('dirCreated' is always false) Don't know the reason!!
        if(!parentDir.exists()){
            Boolean dirCreated = parentDir.mkdir();
            if(!dirCreated){
                LOGGER.error("Can't able to create directory if does not exists. " +
                        "Thank you for creating it your own and running the same test once again. " +
                        "Directory to be created : " + parentDir.getCanonicalPath());
            }else {
                LOGGER.info(parentDir + " - directory created : " + dirCreated);
            }
        }
    }



   
}
